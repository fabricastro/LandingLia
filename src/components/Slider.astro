---
import prev from "../assets/images/prev-button.svg";
import next from "../assets/images/next-button.svg";
import curaduria from "../assets/images/botella-1.svg";
import eventos from "../assets/images/copa.svg";
import asesorias from "../assets/images/trigo.svg";
import encuentros from "../assets/images/libros.svg";
import membresia from "../assets/images/reina.svg";

const slidesToShow = 3;

const cards = [
  { title: "CURADURÍA", icon: curaduria, backTitle: "Detalles", description: "A través de mi metodología personalizada, te ayudo a seleccionar los vinos ideales para restaurantes, bares, eventos y particulares, además de asesorarte en el armado de cavas privada." },
  { title: "EVENTOS", icon: eventos, backTitle: "Eventos", description: "Degustaciones divertidas y sensoriales donde te invito a explorar el vino de una manera única. Un ambiente exclusivo y lleno de sorpresas, pensado para que disfrutes con todos los sentidos." },
  { title: "ASESORÍAS", icon: asesorias, backTitle: "Asesorías", description: "Te ayudo a capacitar a tu equipo para mejorar el servicio, aumentar las ventas y entender lo esencial sobre vinos y sommellerie. Todo lo que necesitas para que tu negocio brille." },
  { title: "ENCUENTROS", icon: encuentros, backTitle: "Encuentros", description: "Sesiones interactivas para aprender, compartir y descubrir lo último sobre el mundo del vino. Abierto a todos, desde aficionados hasta profesionales, siempre con un toque divertido." },
  { title: "MEMBRESÍA", icon: membresia, backTitle: "Membresía", description: "Accede a degustaciones mensuales, selecciones especiales de vinos, contenido exclusivo y muchos más beneficios. Ideal para los que buscan algo único en su experiencia con el vino." },
];
---


<div class="relative w-full max-w-5xl mx-auto">
  <!-- Botón Izquierdo -->
  <button
    id="prev"
    class="absolute top-1/2 left-[-6rem] -translate-y-1/2 z-20 p-2"
  >
    <img src={prev.src} alt="Flecha izquierda" class="w-8 h-[50px] hover:scale-110 transition-transform">
  </button>

  <!-- Contenedor del slider -->
  <div class="overflow-hidden">
    <div id="slider" class="slider-track flex transition-transform">
      {cards.map((card, index) => (
        <div class="flex-shrink-0 w-1/3 p-4">
          <!-- Tarjeta -->
          <div
            class="relative w-full aspect-square group perspective cursor-pointer"
            data-index={index}
          >
            <!-- Cara Frontal -->
            <div class="card-front absolute w-full h-full bg-primary-default text-white flex flex-col items-center justify-center shadow-md backface-hidden transform transition-transform duration-700">
              <span class="text-5xl mb-4"><img class="h-[100px]" src={card.icon.src} alt={card.title}></span>
              <h3 class="text-lg font-regular tracking-widest text-secondary-default">{card.title}</h3>
            </div>
            <!-- Cara Trasera -->
            <div class="card-back absolute w-full h-full bg-secondary-claro flex flex-col items-center justify-center shadow-md backface-hidden transform rotate-y-180 transition-transform duration-700 group-hover:rotate-y-0 px-6">
              <h3 class="text-lg font-regular uppercase text-secondary-oscuro tracking-widest">{card.backTitle}</h3>
              <p class="text-[18px] font-textos text-center mt-4 text-primary-default">{card.description}</p>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>

  <!-- Botón Derecho -->
  <button
    id="next"
    class="absolute top-1/2 right-[-6rem] -translate-y-1/2 z-20 p-2"
  >
    <img src={next.src} alt="Flecha derecha" class="w-8 h-[50px] hover:scale-110 transition-transform">
  </button>

  <!-- Dots de navegación -->
  <div id="dots-container" class="flex justify-center mt-4 space-x-2">
    {Array.from({ length: slidesToShow }, (_, index) => (
      <button
        class="dot w-3 h-3 rounded-full bg-transparent border-secondary-default border-[1px] hover:bg-secondary-default transition-colors"
        data-index={index}
      ></button>
    ))}
  </div>  
</div>

<style>
  .perspective {
    perspective: 1000px;
  }
  .backface-hidden {
    backface-visibility: hidden;
    transform-style: preserve-3d;
  }
  .card-front {
    transform: rotateY(0deg);
  }
  .card-back {
    transform: rotateY(180deg);
  }
  .group:hover .card-front {
    transform: rotateY(-180deg);
  }
  .group:hover .card-back {
    transform: rotateY(0deg);
  }
  .slider-track {
  width: calc(100% * ${cards.length}); /* El ancho total del contenedor */
}
.flex-shrink-0 {
  width: calc(100% / ${slidesToShow}); /* Ajustar el ancho por slide */
}

</style>


<script>
  const slider = document.getElementById("slider");
  const prevButton = document.getElementById("prev");
  const nextButton = document.getElementById("next");
  const dots = document.querySelectorAll(".dot");

  const slidesToShow = 3;
  const totalSlides = 5;

  let currentIndex = 0;

  // Función para mover el slider
  function moveSlider() {
    const visibleSlide = currentIndex % totalSlides;
    slider.style.transition = "transform 0.5s ease-in-out";
    slider.style.transform = `translateX(-${visibleSlide * (100 / slidesToShow)}%)`;

    updateDots();
  }

  // Actualizar el estado de los dots
  function updateDots() {
    dots.forEach((dot, index) => {
      const dotIndex = currentIndex % slidesToShow;
      dot.classList.toggle("bg-secondary-default", index === dotIndex);
      dot.classList.toggle("bg-transparent", index !== dotIndex);
    });
  }

  // Navegación con botones
  nextButton.addEventListener("click", () => {
    if (currentIndex === totalSlides - slidesToShow) {
      // Si estamos en el último set de slides, reiniciamos
      currentIndex = 0;
      slider.style.transition = "none"; // Quitar transición para el reinicio inmediato
      moveSlider();
      setTimeout(() => {
        slider.style.transition = "transform 0.5s ease-in-out"; // Restaurar la transición
      }, 50);
    } else {
      currentIndex++;
      moveSlider();
    }
  });

  prevButton.addEventListener("click", () => {
    if (currentIndex === 0) {
      // Si estamos en el primer set, saltamos al último
      currentIndex = totalSlides - slidesToShow;
      slider.style.transition = "none";
      moveSlider();
      setTimeout(() => {
        slider.style.transition = "transform 0.5s ease-in-out";
      }, 50);
    } else {
      currentIndex--;
      moveSlider();
    }
  });

  // Navegación con dots
  dots.forEach((dot, index) => {
    dot.addEventListener("click", () => {
      currentIndex = index * slidesToShow;
      moveSlider();
    });
  });

  // Inicializar el slider
  moveSlider();
</script>
